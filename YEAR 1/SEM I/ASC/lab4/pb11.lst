     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll    ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 2562000A                    printformat db "%b", 0, 10
    15 00000004 34                          A db 00110100b
    16                                      ;    76543210
    17 00000005 C42B                        B dw 0010101111000100b
    18                                      ;    FEDCBA9876543210
    19 00000007 <res 00000001>              C resb 1
    20                                       ;Given the byte A and the word B, compute the byte C as follows:
    21                                          ;-the bits 0-3 are the same as the bits 2-5 of A
    22                                          ;-the bits 4-7 are the same as the bits 6-9 of B.
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28 00000000 A0[04000000]                    mov al, byte [A]
    29 00000005 C0E802                          shr al, 2
    30 00000008 240F                            and al, 00001111b ; last 4 bits of al are the bits 2-5 of A
    31 0000000A 668B1D[05000000]                mov bx, word [B]
    32 00000011 66C1EB06                        shr bx, 6
    33 00000015 66C1E304                        shl bx, 4 ; 4-7 bits of bx are the bits 6-9 of B
    34 00000019 08D8                            or al, bl
    35 0000001B A2[07000000]                    mov byte [C], al
    36                                          ; exit(0)
    37 00000020 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 00000022 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
