     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf, scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  import scanf msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  
    13                                  ; our data is declared here (the variables needed by our program)
    14                                  segment data use32 class=data
    15                                      ; ...
    16 00000000 00000000                    n dd 0
    17 00000004 257800                      format1 db "%x", 0
    18 00000007 596F7572206E756D62-         message1 db "Your number in base 10 is: %u", 0
    18 00000010 657220696E20626173-
    18 00000019 652031302069733A20-
    18 00000022 257500             
    19 00000025 456E74657220796F75-         message2 db "Enter your number in base 16: ", 0
    19 0000002E 72206E756D62657220-
    19 00000037 696E20626173652031-
    19 00000040 363A2000           
    20                                      ; Read a number in base 16 from the keyboard and display the value of that number in base 10
    21                                      ; Example: Read: 1D; display: 29
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26                                          
    27 00000000 68[25000000]                    push dword message2
    28 00000005 FF15[00000000]                  call [printf]
    29 0000000B 83C404                          add esp, 4
    30                                          
    31 0000000E 68[00000000]                    push dword n
    32 00000013 68[04000000]                    push dword format1
    33 00000018 FF15[00000000]                  call [scanf]
    34 0000001E 83C408                          add esp, 8
    35                                          
    36 00000021 FF35[00000000]                  push dword [n]
    37 00000027 68[07000000]                    push dword message1
    38 0000002C FF15[00000000]                  call [printf]
    39 00000032 83C408                          add esp, 8
    40                                          
    41                                          ; exit(0)
    42 00000035 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 00000037 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
