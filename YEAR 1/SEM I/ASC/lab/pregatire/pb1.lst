     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, fwrite, fprintf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import fopen msvcrt.dll   
    10                                  import fclose msvcrt.dll ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    11                                  import fwrite msvcrt.dll                          ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    12                                  import fread msvcrt.dll
    13                                  import fprintf msvcrt.dll
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 646174612E74787400          file_name1 db "data.txt", 0
    18 00000009 64617461322E747874-         file_name2 db "data2.txt", 0       ; filename to be created
    18 00000012 00                 
    19 00000013 7200                        access_mode1 db "r", 0
    20 00000015 7700                        access_mode2 db "w", 0
    21 00000017 257300                      format db "%s", 0
    22                                                                  ; w - creates an empty file for writing
    23 0000001A FFFFFFFF                    file1_descriptor dd -1
    24 0000001E FFFFFFFF                    file2_descriptor dd -1    ; variable to hold the file descriptor
    25 00000022 <res 00000064>              buf resb 100
    26                                  
    27                                  ; our code starts here
    28                                  segment code use32 class=code
    29                                      start:
    30                                          ; ...
    31                                          
    32 00000000 68[13000000]                    push access_mode1
    33 00000005 68[00000000]                    push file_name1
    34 0000000A FF15[00000000]                  call [fopen]
    35 00000010 83C408                          add esp, 8
    36                                          
    37 00000013 83F800                          cmp eax, 0
    38 00000016 0F84B1000000                    je .end
    39                                          
    40 0000001C A3[1A000000]                    mov [file1_descriptor], eax
    41                                          
    42                                          
    43 00000021 68[15000000]                    push access_mode2
    44 00000026 68[09000000]                    push file_name2
    45 0000002B FF15[00000000]                  call [fopen]
    46 00000031 83C408                          add esp, 8
    47                                          
    48 00000034 83F800                          cmp eax, 0
    49 00000037 0F8481000000                    je .closeReadFile
    50                                          
    51 0000003D A3[1E000000]                    mov [file2_descriptor], eax
    52                                          
    53                                          .loop
    53          ******************       warning: label alone on a line without a colon might be in error [-w+orphan-labels]
    54 00000042 FF35[1A000000]                      push dword [file1_descriptor]
    55 00000048 6A64                                push 100
    56 0000004A 6A01                                push 1
    57 0000004C 68[22000000]                        push buf
    58 00000051 FF15[00000000]                      call [fread]
    59 00000057 83C410                              add esp, 16
    60                                              
    61 0000005A 89C1                                mov ecx, eax
    62 0000005C E340                                jecxz .closeFiles
    63                                              
    64 0000005E BE[22000000]                        mov esi, buf
    65                                              
    66                                              .parse:
    67 00000063 60                                      pushad
    68 00000064 803E30                                  cmp byte [esi], '0'
    69 00000067 7214                                    jb .skip
    70 00000069 803E39                                  cmp byte [esi], '9'
    71 0000006C 770F                                    ja .skip
    72                                                 
    73 0000006E 803E39                                  cmp byte [esi], '9'
    74 00000071 7402                                    je .bine
    75                                                      
    76 00000073 EB05                                    jmp .skip2
    77                                                  .bine:
    78 00000075 C60630                                  mov byte [esi], '0'
    79 00000078 EB03                                    jmp .skip
    80                                                  .skip2:
    81 0000007A 800601                                  add byte [esi], 1
    82                                                      
    83                                                  .skip:
    84                                                      
    85                                                  
    86                                                  
    87                                                  ;push dword [file2_descriptor]
    88                                                  ;push 1
    89                                                  ;push 1
    90                                                  ;push esi
    91                                                  ;call [fwrite]
    92                                                  ;add esp, 16
    93                                      
    94 0000007D 61                                      popad
    95 0000007E 46                                      inc esi
    96 0000007F E2E2                                    loop .parse
    97 00000081 60                                      pushad
    98 00000082 68[22000000]                            push buf
    99 00000087 68[17000000]                            push format
   100 0000008C FF35[1E000000]                          push dword [file2_descriptor]
   101 00000092 FF15[00000000]                          call [fprintf]
   102 00000098 83C40C                                  add esp, 12
   103 0000009B 61                                      popad
   104 0000009C EBA4                                jmp .loop
   105                                              
   106                                          
   107                                          
   108                                          
   109                                          
   110                                          .closeFiles:
   111 0000009E FF35[1A000000]                      push dword [file1_descriptor]
   112 000000A4 FF15[00000000]                      call [fclose]
   113 000000AA 83C404                              add esp, 4
   114                                              
   115 000000AD FF35[1E000000]                      push dword [file2_descriptor]
   116 000000B3 FF15[00000000]                      call [fclose]
   117 000000B9 83C404                              add esp, 4
   118                                              
   119                                          
   120                                          
   121                                          
   122                                          
   123                                          
   124 000000BC EB0F                            jmp .end
   125                                          .closeReadFile:
   126 000000BE FF35[1A000000]                      push dword [file1_descriptor]
   127 000000C4 FF15[00000000]                      call [fclose]
   128 000000CA 83C404                              add esp, 4
   129                                              
   130                                          .end:
   131                                              
   132                                          
   133                                      
   134                                          ; exit(0)
   135 000000CD 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   136 000000CF FF15[00000000]                  call    [exit]       ; call exit to terminate the program
