     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start, len      
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt.dll                         ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 78A63412785634127D-         sir dd 1234A678h, 12345678h, 1AC3B47Dh, 0hFEDC9876
    14 00000009 B4C31A7698DCFE     
    15                                      len equ ($-sir)/4
    16 00000010 <res 00000004>              sir2 resb len
    17 00000014 25640A00                    format db "%d",10, 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          
    24 00000000 31C0                            xor eax, eax
    25 00000002 B804000000                      mov eax, len
    26                                          
    27 00000007 60                              pushad
    28 00000008 50                              push eax
    29 00000009 68[14000000]                    push format
    30 0000000E FF15[00000000]                  call [printf]
    31 00000014 83C408                          add esp, 8
    32 00000017 61                              popad
    33                                   
    34                                          ;push sir2
    35                                          ;push sir
    36                                          ;call myfunction
    37                                          ;add esp, 8
    38                                          
    39                                          
    40                                      
    41                                          ; exit(0)
    42 00000018 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    43 0000001A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
