Id --> 1
ExeStack:
(int v;;(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=10
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=10
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(v=v-1;(v=v-1;print(v);))};
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(v=v-1;(v=v-1;print(v);))};
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(v=v-1;(v=v-1;print(v);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(v=v-1;(v=v-1;print(v);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(10)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v-1
(v=v-1;print(v);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(10)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v-1
(v=v-1;print(v);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(v=v-1;print(v);)
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(v=v-1;print(v);)
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v-1
print(v);
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v-1
print(v);
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
SymbolTable:
v=8
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
SymbolTable:
v=8
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
v=8
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
v=10
Heap:
Out:
8
100
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(int v;;(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
int v;
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
int v;
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=10
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=10
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
fork{(v=v-1;(v=v-1;print(v);))};
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
fork{(v=v-1;(v=v-1;print(v);))};
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(v=v-1;(v=v-1;print(v);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(v=v-1;(v=v-1;print(v);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(10)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v-1
(v=v-1;print(v);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(10)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v-1
(v=v-1;print(v);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(v=v-1;print(v);)
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(v=v-1;print(v);)
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v-1
print(v);
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v-1
print(v);
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
SymbolTable:
v=8
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
SymbolTable:
v=8
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
v=8
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
v=10
Heap:
Out:
8
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=20;(wait(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=20;(wait(10);print(v*10);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=20;(wait(10);print(v*10);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=20;(wait(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=20;(wait(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=20
(wait(10);print(v*10);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=20
(wait(10);print(v*10);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wait(10);print(v*10);)
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wait(10);print(v*10);)
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(10)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(10)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(10);;sleep(9))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(10);;sleep(9))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(10);
sleep(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(10);
sleep(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=20;(wait(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=20;(wait(10);print(v*10);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=20;(wait(10);print(v*10);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=20;(wait(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=20;(wait(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=20
(wait(10);print(v*10);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=20
(wait(10);print(v*10);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wait(10);print(v*10);)
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wait(10);print(v*10);)
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(10)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(10)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(10);;wait(9))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(10);;wait(9))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(10);
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(10);
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(9);;wait(8))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(9);;wait(8))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(9);
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(9);
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(8);;wait(7))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(8);;wait(7))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(8);
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(8);
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(7);;wait(6))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(7);;wait(6))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(7);
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(7);
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(6);;wait(5))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(6);;wait(5))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(6);
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(6);
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(5);;wait(4))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(5);;wait(4))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(5);
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(5);
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(4);;wait(3))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(4);;wait(3))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(4);
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(4);
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(3);;wait(2))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(3);;wait(2))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(3);
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(3);
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(2);;wait(1))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(2);;wait(1))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(2);
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(2);
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(1);;wait(0))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(1);;wait(0))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(1);
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(1);
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
200
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
((fork{(print(v);;v=v-1)};;v=v+1);while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) })
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
((fork{(print(v);;v=v-1)};;v=v+1);while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) })
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v-1
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v-1
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v-1
SymbolTable:
v=0
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v-1
SymbolTable:
v=0
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
v=-1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
v=0
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int x;
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
v=1
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int x;
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int y;
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int y;
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int z;
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int z;
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int w;
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int w;
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
x=1
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
x=1
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
y=2
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
y=2
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
z=3
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
z=3
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
w=4
print(v*10);
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
w=4
print(v*10);
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v*10);
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
30
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int v;;(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int v;
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int v;
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=0
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=0
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
((fork{(print(v);;v=v-1)};;v=v+1);while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) })
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
((fork{(print(v);;v=v-1)};;v=v+1);while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) })
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
print(v);
v=v-1
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
print(v);
v=v-1
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
v=v-1
SymbolTable:
v=0
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
v=v-1
SymbolTable:
v=0
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
SymbolTable:
v=-1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(v);
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(v);
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
SymbolTable:
v=0
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
print(v);
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
print(v);
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int x;
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
SymbolTable:
v=1
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int x;
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int y;
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int y;
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int z;
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int z;
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int w;
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int w;
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
x=1
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
x=1
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
y=2
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
y=2
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
z=3
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
z=3
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
w=4
print(v*10);
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
w=4
print(v*10);
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(v*10);
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(v*10);
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
30
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v1;;(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v1;
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v1;
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v2;
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v2;
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v1=2
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v1=2
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v2=3
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v2=3
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(MUL(v1,v2));
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(MUL(v1,v2));
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
v1=2
v2=3
Heap:
Out:
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) a;;(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 20);;(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));))
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 20);
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 20);
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};};print(rH(a));)
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};}
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
for(v = 0; v < 3; v = v+1) {fork{(print(v);;v=v*rH(a))};}
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }))
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }))
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=0;while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) })
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=0
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
a=1, int
v=0
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(print(v);;v=v*rH(a))};;v=v+1)
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=1
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
a=1, int
v=20
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(print(v);;v=v*rH(a))};
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=v+1
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
(print(v);;v=v*rH(a))
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((v<3);) { (fork{(print(v);;v=v*rH(a))};;v=v+1) }
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
print(v);
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
v=v*rH(a)
SymbolTable:
a=1, int
v=2
Heap:
1 --> 20
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=1, int
v=3
Heap:
1 --> 20
Out:
0
1
2
20
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
a=1, int
v=40
Heap:
1 --> 20
Out:
0
1
2
20
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(int v;;(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int v;
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
int v;
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(v=10;(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);)))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=10
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
v=10
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(fork{(v=v-1;(v=v-1;print(v);))};;(sleep(10);print(v*10);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(v=v-1;(v=v-1;print(v);))};
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
fork{(v=v-1;(v=v-1;print(v);))};
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
(v=v-1;(v=v-1;print(v);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(sleep(10);print(v*10);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
(v=v-1;(v=v-1;print(v);))
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(10)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
v=v-1
(v=v-1;print(v);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(10)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
v=v-1
(v=v-1;print(v);)
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
(v=v-1;print(v);)
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(9)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
(v=v-1;print(v);)
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
v=v-1
print(v);
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(8)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
v=v-1
print(v);
SymbolTable:
v=9
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
print(v);
SymbolTable:
v=8
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(7)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
print(v);
SymbolTable:
v=8
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
SymbolTable:
v=8
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(6)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(5)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(4)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(3)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(2)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(1)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
sleep(0)
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(v*10);
SymbolTable:
v=10
Heap:
Out:
8
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
SymbolTable:
v=10
Heap:
Out:
8
100
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(int v;;(v=20;(wait(10);print(v*10);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
int v;
(v=20;(wait(10);print(v*10);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
int v;
(v=20;(wait(10);print(v*10);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(v=20;(wait(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(v=20;(wait(10);print(v*10);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
v=20
(wait(10);print(v*10);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
v=20
(wait(10);print(v*10);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(wait(10);print(v*10);)
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(wait(10);print(v*10);)
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(10)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(10)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(10);;wait(9))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(10);;wait(9))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(10);
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(10);
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(9)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(9);;wait(8))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(9);;wait(8))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(9);
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(9);
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(8)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(8);;wait(7))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(8);;wait(7))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(8);
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(8);
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(7)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(7);;wait(6))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(7);;wait(6))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(7);
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(7);
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(6)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(6);;wait(5))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(6);;wait(5))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(6);
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(6);
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(5)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(5);;wait(4))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(5);;wait(4))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(5);
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(5);
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(4)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(4);;wait(3))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(4);;wait(3))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(4);
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(4);
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(3)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(3);;wait(2))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(3);;wait(2))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(3);
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(3);
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(2)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(2);;wait(1))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(2);;wait(1))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(2);
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(2);
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(1)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(1);;wait(0))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(print(1);;wait(0))
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(1);
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(1);
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
wait(0)
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(v*10);
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
SymbolTable:
v=20
Heap:
Out:
10
9
8
7
6
5
4
3
2
1
200
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int v;;(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int v;
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int v;
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(v=0;(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=0
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=0
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);;(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
repeat{ (fork{(print(v);;v=v-1)};;v=v+1) } until (v==3);
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
((fork{(print(v);;v=v-1)};;v=v+1);while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) })
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
((fork{(print(v);;v=v-1)};;v=v+1);while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) })
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
print(v);
v=v-1
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
print(v);
v=v-1
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
v=v-1
SymbolTable:
v=0
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
v=v-1
SymbolTable:
v=0
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
SymbolTable:
v=-1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
print(v);
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
print(v);
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(fork{(print(v);;v=v-1)};;v=v+1)
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
v=v-1
SymbolTable:
v=1
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
SymbolTable:
v=0
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(print(v);;v=v-1)};
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
v=v+1
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
(print(v);;v=v-1)
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
print(v);
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
while (!((v==3);)) { (fork{(print(v);;v=v-1)};;v=v+1) }
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
print(v);
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int x;;(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
v=v-1
SymbolTable:
v=2
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int x;
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
SymbolTable:
v=1
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int x;
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int y;;(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int y;
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int y;
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int z;;(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);))))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int z;
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int z;
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(int w;;(x=1;(y=2;(z=3;(w=4;print(v*10);)))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int w;
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
int w;
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(x=1;(y=2;(z=3;(w=4;print(v*10);))))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
x=1
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
x=1
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=0
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(y=2;(z=3;(w=4;print(v*10);)))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
y=2
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
y=2
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=0
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(z=3;(w=4;print(v*10);))
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
z=3
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
z=3
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=0
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
(w=4;print(v*10);)
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
w=4
print(v*10);
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
w=4
print(v*10);
SymbolTable:
v=3
w=0
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
print(v*10);
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
print(v*10);
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
SymbolTable:
v=3
w=4
x=1
y=2
z=3
Heap:
Out:
0
1
2
30
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(int v1;;(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
int v1;
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
int v1;
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(int v2;;(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
int v2;
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
int v2;
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(v1=2;(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
v1=2
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
v1=2
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=0
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(v2=3;(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);)))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
v2=3
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
v2=3
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
(IF((v1!=0);) THEN(print(MUL(v1,v2));)ELSE(print(v1);))
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
print(MUL(v1,v2));
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
print(MUL(v1,v2));
SymbolTable:
v1=2
v2=3
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
SymbolTable:
v1=2
v2=3
Heap:
Out:
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(int v;;(v=4;(do{ (print(v);;v=v-1) }while((v>0););print(v);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
int v;
(v=4;(do{ (print(v);;v=v-1) }while((v>0););print(v);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
int v;
(v=4;(do{ (print(v);;v=v-1) }while((v>0););print(v);))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(v=4;(do{ (print(v);;v=v-1) }while((v>0););print(v);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(v=4;(do{ (print(v);;v=v-1) }while((v>0););print(v);))
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=4
(do{ (print(v);;v=v-1) }while((v>0););print(v);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=4
(do{ (print(v);;v=v-1) }while((v>0););print(v);)
SymbolTable:
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(do{ (print(v);;v=v-1) }while((v>0););print(v);)
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(do{ (print(v);;v=v-1) }while((v>0););print(v);)
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
do{ (print(v);;v=v-1) }while((v>0);)
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
do{ (print(v);;v=v-1) }while((v>0);)
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
((print(v);;v=v-1);while ((v>0);) { (print(v);;v=v-1) })
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
((print(v);;v=v-1);while ((v>0);) { (print(v);;v=v-1) })
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=4
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=4
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=4
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=3
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=2
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(print(v);;v=v-1)
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
v=v-1
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=1
Heap:
Out:
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=0
Heap:
Out:
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
while ((v>0);) { (print(v);;v=v-1) }
print(v);
SymbolTable:
v=0
Heap:
Out:
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
SymbolTable:
v=0
Heap:
Out:
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(v);
SymbolTable:
v=0
Heap:
Out:
4
3
2
1
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
SymbolTable:
v=0
Heap:
Out:
4
3
2
1
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int a;;(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int a;
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int a;
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int b;
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int b;
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int c;
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int c;
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
a=1
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
a=1
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=2
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=2
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=5
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=5
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);})
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);})
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((a*10==b*c);) THEN((print(a);;print(b);))ELSE((IF((a*10==10);) THEN((print(100);;print(200);))ELSE(print(300);))))
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((a*10==b*c);) THEN((print(a);;print(b);))ELSE((IF((a*10==10);) THEN((print(100);;print(200);))ELSE(print(300);))))
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(a);;print(b);)
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(a);;print(b);)
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(a);
print(b);
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(a);
print(b);
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(b);
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(b);
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
1
2
300
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int a;;(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int a;
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int a;
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int b;;(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int b;
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int b;
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int c;;(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int c;
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int c;
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(a=1;(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
a=1
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
a=1
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=0
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(b=2;(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
b=2
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
b=2
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=0
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(c=5;(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);))
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
c=5
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
c=5
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);});print(300);)
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
switch(a*10) (case (b*c) : {(print(a);;print(b);)}) (case (10) : {(print(100);;print(200);)}) (default : {print(300);})
print(300);
SymbolTable:
a=1
b=2
c=5
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(bool b;;(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
bool b;
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
bool b;
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:
b=false
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:
b=false
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int c;
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b=false
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int c;
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b=false
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b=false
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b=false
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=true
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b=false
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=true
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b=false
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= b ? 100 : 200
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= b ? 100 : 200
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(b) THEN(c=100)ELSE(c=200))
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(b) THEN(c=100)ELSE(c=200))
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=100
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=100
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=100
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b=true
c=100
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
(c= false ? 100 : 200;print(c);)
SymbolTable:
b=true
c=100
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
(c= false ? 100 : 200;print(c);)
SymbolTable:
b=true
c=100
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= false ? 100 : 200;print(c);)
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= false ? 100 : 200;print(c);)
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= false ? 100 : 200
print(c);
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= false ? 100 : 200
print(c);
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(false) THEN(c=100)ELSE(c=200))
print(c);
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(false) THEN(c=100)ELSE(c=200))
print(c);
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=200
print(c);
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=200
print(c);
SymbolTable:
b=true
c=100
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
SymbolTable:
b=true
c=200
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
SymbolTable:
b=true
c=200
Heap:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
b=true
c=200
Heap:
Out:
100
200
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) a;;(Ref(int) b;;(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(Ref(int) b;;(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(Ref(int) b;;(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) b;;(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))))
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) b;;(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))))
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) b;
(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))))
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) b;
(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))))
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))))
SymbolTable:
a=0, int
b=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))))
SymbolTable:
a=0, int
b=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))
SymbolTable:
a=0, int
b=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))
SymbolTable:
a=0, int
b=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))
SymbolTable:
a=0, int
b=0, int
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(a, 0);;(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))))
SymbolTable:
a=0, int
b=0, int
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 0);
(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))
SymbolTable:
a=0, int
b=0, int
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(a, 0);
(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))
SymbolTable:
a=0, int
b=0, int
v=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))
SymbolTable:
a=1, int
b=0, int
v=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(b, 0);;(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))))
SymbolTable:
a=1, int
b=0, int
v=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(b, 0);
(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))
SymbolTable:
a=1, int
b=0, int
v=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(b, 0);
(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))
SymbolTable:
a=1, int
b=0, int
v=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 0
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wH(a, 1);;(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 0
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wH(a, 1);
(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 0
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wH(a, 1);
(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 0
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(wH(b, 2);;(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wH(b, 2);
(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
wH(b, 2);
(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v= (rH(a)<rH(b)); ? 100 : 200;(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v= (rH(a)<rH(b)); ? 100 : 200
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v= (rH(a)<rH(b)); ? 100 : 200
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((rH(a)<rH(b));) THEN(v=100)ELSE(v=200))
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((rH(a)<rH(b));) THEN(v=100)ELSE(v=200))
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=100
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=100
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=0
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(v);;(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);))
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v= (rH(b)-2>rH(a)); ? 100 : 200;print(v);)
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v= (rH(b)-2>rH(a)); ? 100 : 200
print(v);
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v= (rH(b)-2>rH(a)); ? 100 : 200
print(v);
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((rH(b)-2>rH(a));) THEN(v=100)ELSE(v=200))
print(v);
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF((rH(b)-2>rH(a));) THEN(v=100)ELSE(v=200))
print(v);
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=200
print(v);
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=200
print(v);
SymbolTable:
a=1, int
b=2, int
v=100
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
SymbolTable:
a=1, int
b=2, int
v=200
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
SymbolTable:
a=1, int
b=2, int
v=200
Heap:
1 --> 1
2 --> 2
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=1, int
b=2, int
v=200
Heap:
1 --> 1
2 --> 2
Out:
100
200
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(bool b;;(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))))
SymbolTable:

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
bool b;
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
bool b;
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:
b -> false

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int c;;(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))))
SymbolTable:
b -> false

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int c;
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b -> false

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int c;
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b -> false

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b -> false
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=true;(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);))))
SymbolTable:
b -> false
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=true
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b -> false
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=true
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b -> false
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= b ? 100 : 200;(print(c);;(c= false ? 100 : 200;print(c);)))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= b ? 100 : 200
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= b ? 100 : 200
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(b) THEN(c=100)ELSE(c=200))
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(b) THEN(c=100)ELSE(c=200))
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=100
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=100
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 0

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(c);;(c= false ? 100 : 200;print(c);))
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
(c= false ? 100 : 200;print(c);)
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
(c= false ? 100 : 200;print(c);)
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= false ? 100 : 200;print(c);)
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(c= false ? 100 : 200;print(c);)
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= false ? 100 : 200
print(c);
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c= false ? 100 : 200
print(c);
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(false) THEN(c=100)ELSE(c=200))
print(c);
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(IF(false) THEN(c=100)ELSE(c=200))
print(c);
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=200
print(c);
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
c=200
print(c);
SymbolTable:
b -> true
c -> 100

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
SymbolTable:
b -> true
c -> 200

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(c);
SymbolTable:
b -> true
c -> 200

Heap:
ProcTable:
Out:
100
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
b -> true
c -> 200

Heap:
ProcTable:
Out:
100
200
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))))
SymbolTable:

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int w;
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int w;
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=2
(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))))
SymbolTable:

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int w;;(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int w;
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int w;
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=2;(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=2
(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=2
(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))
SymbolTable:
v -> 0
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))
SymbolTable:
v -> 2
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(w=5;(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)))
SymbolTable:
v -> 2
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
w=5
(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))
SymbolTable:
v -> 2
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
w=5
(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))
SymbolTable:
v -> 2
w -> 0

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(call sum([v*10, w]);(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};))
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
call sum([v*10, w])
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
call sum([v*10, w])
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=a+b;print(v);))
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int v;;(v=a+b;print(v);))
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=a+b;print(v);)
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int v;
(v=a+b;print(v);)
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=a+b;print(v);)
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(v=a+b;print(v);)
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=a+b
print(v);
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
v=a+b
print(v);
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
return
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
a -> 20
b -> 5
v -> 25

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(v);;fork{(call product([v, w]);fork{call sum([v, w])};)};)
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
fork{(call product([v, w]);fork{call sum([v, w])};)};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(v);
fork{(call product([v, w]);fork{call sum([v, w])};)};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(call product([v, w]);fork{call sum([v, w])};)};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(call product([v, w]);fork{call sum([v, w])};)};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(call product([v, w]);fork{call sum([v, w])};)
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(call product([v, w]);fork{call sum([v, w])};)
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
call product([v, w])
fork{call sum([v, w])};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
call product([v, w])
fork{call sum([v, w])};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int v;;(v=a*b;print(v);))
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(int v;;(v=a*b;print(v);))
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int v;
(v=a*b;print(v);)
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
int v;
(v=a*b;print(v);)
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(v=a*b;print(v);)
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(v=a*b;print(v);)
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=a*b
print(v);
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
v=a*b
print(v);
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(v);
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
return
fork{call sum([v, w])};
SymbolTable:
a -> 2
b -> 5
v -> 10

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{call sum([v, w])};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{call sum([v, w])};
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
call sum([v, w])
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
call sum([v, w])
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(int v;;(v=a+b;print(v);))
return
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(int v;;(v=a+b;print(v);))
return
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
int v;
(v=a+b;print(v);)
return
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
int v;
(v=a+b;print(v);)
return
SymbolTable:
a -> 2
b -> 5

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(v=a+b;print(v);)
return
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(v=a+b;print(v);)
return
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=a+b
print(v);
return
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
v=a+b
print(v);
return
SymbolTable:
a -> 2
b -> 5
v -> 0

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
return
SymbolTable:
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(v);
return
SymbolTable:
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
return
SymbolTable:
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
7
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
return
SymbolTable:
a -> 2
b -> 5
v -> 7

v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
7
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
v -> 2
w -> 5

Heap:
ProcTable:
product -> Params: [a, b], Statement: (int v;;(v=a*b;print(v);))
sum -> Params: [a, b], Statement: (int v;;(v=a+b;print(v);))
Out:
25
2
10
7
FileTable:
-------------------------------------------------------------

