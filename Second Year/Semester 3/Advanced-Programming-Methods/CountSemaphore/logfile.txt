Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 2);;(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 2);
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(newSemaphore(cnt,rH(v1),1);(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
newSemaphore(cnt,rH(v1),1)
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 2
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [2], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v1)-1);
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v1)-1);
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [1], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*10);
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*10);
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 20
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*2);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*2);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
400
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [3], 1
Out:
20
19
400
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 400
SemaphoreTable:
1 --> 2, [], 1
Out:
20
19
400
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) v1;;(int cnt;;(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) v1;
(int cnt;;(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int cnt;;(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int cnt;
(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(new(v1, 1);;(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 1);
(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
new(v1, 1);
(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=0, int
Heap:
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(createSemaphore(cnt,rH(v1));(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
createSemaphore(cnt,rH(v1))
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
createSemaphore(cnt,rH(v1))
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=0
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};;(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))};
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};;(acquire(cnt);(print(rH(v1)-1);;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))};
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, []
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(acquire(cnt);(print(rH(v1)-1);;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(wH(v1, rH(v1)*10);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(acquire(cnt);(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
wH(v1, rH(v1)*10);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 1
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [2]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, []
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, []
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, []
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
acquire(cnt)
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, []
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, []
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(print(rH(v1)-1);;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v1)-1);
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(rH(v1)-1);
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
acquire(cnt)
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [1]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*10);;(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt))))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*10);
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*10);
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 10
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 100
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(wH(v1, rH(v1)*2);;(print(rH(v1));;release(cnt)))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 100
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*2);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 100
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
wH(v1, rH(v1)*2);
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 100
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(print(rH(v1));;release(cnt))
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(v1));
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
200
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
release(cnt)
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, [3]
Out:
10
9
200
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
cnt=1
v1=1, int
Heap:
1 --> 200
SemaphoreTable:
1 --> 1, []
Out:
10
9
200
FileTable:
-------------------------------------------------------------

