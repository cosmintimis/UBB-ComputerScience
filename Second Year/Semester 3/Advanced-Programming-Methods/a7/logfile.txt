Id --> 1
ExeStack:
(int a;;(int b;;(a=2+3*5;(b=a+1;print(b);))))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int a;
(int b;;(a=2+3*5;(b=a+1;print(b);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int a;
(int b;;(a=2+3*5;(b=a+1;print(b);)))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int b;;(a=2+3*5;(b=a+1;print(b);)))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int b;;(a=2+3*5;(b=a+1;print(b);)))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int b;
(a=2+3*5;(b=a+1;print(b);))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int b;
(a=2+3*5;(b=a+1;print(b);))
SymbolTable:
a=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(a=2+3*5;(b=a+1;print(b);))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(a=2+3*5;(b=a+1;print(b);))
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
a=2+3*5
(b=a+1;print(b);)
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
a=2+3*5
(b=a+1;print(b);)
SymbolTable:
a=0
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=a+1;print(b);)
SymbolTable:
a=17
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(b=a+1;print(b);)
SymbolTable:
a=17
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=a+1
print(b);
SymbolTable:
a=17
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
b=a+1
print(b);
SymbolTable:
a=17
b=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(b);
SymbolTable:
a=17
b=18
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
print(b);
SymbolTable:
a=17
b=18
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=17
b=18
Heap:
Out:
18
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) a;;(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int counter;
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int counter;
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) a;;(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int counter;
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int counter;
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(rH(a));
SymbolTable:
a=2, int
counter=1
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(rH(a));
SymbolTable:
a=2, int
counter=1
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
SymbolTable:
a=2, int
counter=1
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(rH(a));
SymbolTable:
a=3, int
counter=2
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(rH(a));
SymbolTable:
a=3, int
counter=2
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
SymbolTable:
a=3, int
counter=2
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
print(rH(a));
SymbolTable:
a=4, int
counter=3
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
print(rH(a));
SymbolTable:
a=4, int
counter=3
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
SymbolTable:
a=4, int
counter=3
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
print(rH(a));
SymbolTable:
a=5, int
counter=4
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
print(rH(a));
SymbolTable:
a=5, int
counter=4
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
SymbolTable:
a=5, int
counter=4
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(rH(a));
SymbolTable:
a=6, int
counter=5
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(rH(a));
SymbolTable:
a=6, int
counter=5
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
SymbolTable:
a=6, int
counter=5
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 14
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 14
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 14
ExeStack:
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
print(rH(a));
SymbolTable:
a=7, int
counter=6
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
print(rH(a));
SymbolTable:
a=7, int
counter=6
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
SymbolTable:
a=7, int
counter=6
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 16
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 16
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 16
ExeStack:
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
print(rH(a));
SymbolTable:
a=8, int
counter=7
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
print(rH(a));
SymbolTable:
a=8, int
counter=7
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
SymbolTable:
a=8, int
counter=7
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 18
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 18
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 18
ExeStack:
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
print(rH(a));
SymbolTable:
a=9, int
counter=8
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
print(rH(a));
SymbolTable:
a=9, int
counter=8
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
SymbolTable:
a=9, int
counter=8
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 20
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 20
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=10
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 20
ExeStack:
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=10
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=0, int
counter=10
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
print(rH(a));
SymbolTable:
a=10, int
counter=9
Heap:
10 --> 9
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
print(rH(a));
SymbolTable:
a=10, int
counter=9
Heap:
10 --> 9
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
SymbolTable:
a=10, int
counter=9
Heap:
10 --> 9
Out:
0
1
2
3
4
5
6
7
8
9
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(Ref(int) a;;(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }))
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
Ref(int) a;
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(int counter;;while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) })
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int counter;
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
int counter;
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 2
ExeStack:
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=0
Heap:
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
print(rH(a));
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 3
ExeStack:
SymbolTable:
a=1, int
counter=0
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=1
Heap:
1 --> 0
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 4
ExeStack:
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=1
Heap:
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(rH(a));
SymbolTable:
a=2, int
counter=1
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
print(rH(a));
SymbolTable:
a=2, int
counter=1
Heap:
2 --> 1
Out:
0
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 5
ExeStack:
SymbolTable:
a=2, int
counter=1
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=2
Heap:
2 --> 1
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 6
ExeStack:
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=2
Heap:
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(rH(a));
SymbolTable:
a=3, int
counter=2
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
print(rH(a));
SymbolTable:
a=3, int
counter=2
Heap:
3 --> 2
Out:
0
1
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 7
ExeStack:
SymbolTable:
a=3, int
counter=2
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=3
Heap:
3 --> 2
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 8
ExeStack:
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=3
Heap:
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
print(rH(a));
SymbolTable:
a=4, int
counter=3
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
print(rH(a));
SymbolTable:
a=4, int
counter=3
Heap:
4 --> 3
Out:
0
1
2
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 9
ExeStack:
SymbolTable:
a=4, int
counter=3
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=4
Heap:
4 --> 3
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 10
ExeStack:
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=4
Heap:
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
print(rH(a));
SymbolTable:
a=5, int
counter=4
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
print(rH(a));
SymbolTable:
a=5, int
counter=4
Heap:
5 --> 4
Out:
0
1
2
3
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 11
ExeStack:
SymbolTable:
a=5, int
counter=4
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=5
Heap:
5 --> 4
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 12
ExeStack:
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=5
Heap:
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(rH(a));
SymbolTable:
a=6, int
counter=5
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
print(rH(a));
SymbolTable:
a=6, int
counter=5
Heap:
6 --> 5
Out:
0
1
2
3
4
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 13
ExeStack:
SymbolTable:
a=6, int
counter=5
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 14
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 14
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=6
Heap:
6 --> 5
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 14
ExeStack:
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=6
Heap:
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
print(rH(a));
SymbolTable:
a=7, int
counter=6
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
print(rH(a));
SymbolTable:
a=7, int
counter=6
Heap:
7 --> 6
Out:
0
1
2
3
4
5
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 15
ExeStack:
SymbolTable:
a=7, int
counter=6
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 16
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 16
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=7
Heap:
7 --> 6
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 16
ExeStack:
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=7
Heap:
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
print(rH(a));
SymbolTable:
a=8, int
counter=7
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
print(rH(a));
SymbolTable:
a=8, int
counter=7
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 17
ExeStack:
SymbolTable:
a=8, int
counter=7
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 18
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 18
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=8
Heap:
8 --> 7
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 18
ExeStack:
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
(fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1)
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=8
Heap:
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
print(rH(a));
SymbolTable:
a=9, int
counter=8
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
fork{fork{(new(a, counter);;print(rH(a));)};};
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
print(rH(a));
SymbolTable:
a=9, int
counter=8
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 19
ExeStack:
SymbolTable:
a=9, int
counter=8
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 20
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
counter=counter+1
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 20
ExeStack:
fork{(new(a, counter);;print(rH(a));)};
SymbolTable:
a=0, int
counter=9
Heap:
9 --> 8
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=10
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 20
ExeStack:
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
while ((counter<10);) { (fork{fork{(new(a, counter);;print(rH(a));)};};;counter=counter+1) }
SymbolTable:
a=0, int
counter=10
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
(new(a, counter);;print(rH(a));)
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 1
ExeStack:
SymbolTable:
a=0, int
counter=10
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
new(a, counter);
print(rH(a));
SymbolTable:
a=0, int
counter=9
Heap:
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
print(rH(a));
SymbolTable:
a=10, int
counter=9
Heap:
10 --> 9
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
print(rH(a));
SymbolTable:
a=10, int
counter=9
Heap:
10 --> 9
Out:
0
1
2
3
4
5
6
7
8
FileTable:
-------------------------------------------------------------

Id --> 21
ExeStack:
SymbolTable:
a=10, int
counter=9
Heap:
10 --> 9
Out:
0
1
2
3
4
5
6
7
8
9
FileTable:
-------------------------------------------------------------

